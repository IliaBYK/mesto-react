{"ast":null,"code":"import { optionsApi } from './constants.js';\nclass Api {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n  }\n  _checkDataResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n  _getResponse(url, options) {\n    return fetch(url, options).then(this._checkDataResponse);\n  }\n  getInitialCards() {\n    return this._getResponse(this._url + '/cards', {\n      headers: this._headers\n    });\n  }\n  getServerUserInfo() {\n    return this._getResponse(this._url + '/users/me', {\n      headers: this._headers\n    });\n  }\n  setServerUserInfo(inputs) {\n    return this._getResponse(this._url + '/users/me', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputs.name,\n        about: inputs.about\n      })\n    });\n  }\n  postServerCard(inputs) {\n    return this._getResponse(this._url + '/cards', {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputs.name,\n        link: inputs.link\n      })\n    });\n  }\n  deleteCard(cardId) {\n    return this._getResponse(this._url + '/cards/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers\n    });\n  }\n  putLike(cardId) {\n    return this._getResponse(this._url + '/cards/' + cardId + '/likes', {\n      method: 'PUT',\n      headers: this._headers\n    });\n  }\n  deleteLike(cardId) {\n    return this._getResponse(this._url + '/cards/' + cardId + '/likes', {\n      method: 'DELETE',\n      headers: this._headers\n    });\n  }\n  setUserAvatar(inputs) {\n    return this._getResponse(this._url + '/users/me/avatar', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: inputs.avatar\n      })\n    });\n  }\n}\nconst api = new Api(optionsApi);\nexport default api;","map":{"version":3,"names":["optionsApi","Api","constructor","options","_url","url","_headers","headers","_checkDataResponse","res","ok","Promise","reject","status","json","_getResponse","fetch","then","getInitialCards","getServerUserInfo","setServerUserInfo","inputs","method","body","JSON","stringify","name","about","postServerCard","link","deleteCard","cardId","putLike","deleteLike","setUserAvatar","avatar","api"],"sources":["/Users/iliabybykov/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["import {optionsApi} from './constants.js';\n\nclass Api {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n  }\n\n  _checkDataResponse(res) {\n    if (!res.ok) {\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    return res.json();\n  }\n\n  _getResponse(url, options) {\n    return fetch(url, options).then(this._checkDataResponse);\n  }\n\n  getInitialCards() {\n    return this._getResponse(this._url + '/cards', {\n      headers: this._headers\n    })\n  }\n\n  getServerUserInfo() {\n    return this._getResponse(this._url + '/users/me', {\n      headers: this._headers\n    })\n  }\n\n  setServerUserInfo(inputs) {\n    return this._getResponse(this._url + '/users/me', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputs.name,\n        about: inputs.about\n      })\n    })\n  }\n\n  postServerCard(inputs) {\n    return this._getResponse(this._url + '/cards', {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: inputs.name,\n        link: inputs.link\n      })\n    })\n  }\n\n  deleteCard(cardId) {\n    return this._getResponse(this._url + '/cards/' + cardId, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n  }\n\n  putLike(cardId) {\n    return this._getResponse(this._url + '/cards/' + cardId + '/likes', {\n      method: 'PUT',\n      headers: this._headers,\n    })\n  }\n\n  deleteLike(cardId) {\n    return this._getResponse(this._url + '/cards/' + cardId + '/likes', {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n  }\n\n  setUserAvatar(inputs) {\n    return this._getResponse(this._url + '/users/me/avatar', {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: inputs.avatar\n      })\n    })\n  }\n}\n\nconst api = new Api(optionsApi);\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}